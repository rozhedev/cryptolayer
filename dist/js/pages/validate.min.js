'use strict'

// Выбор нужной валюты

function chooseCurrency(item, currencyBtns) {
    for (let item of currencyBtns) {
        item.classList.remove('_active');
    }
    item.classList.add('_active');
}

//  Проверка лимитов

function checkLimits(curBtn, curBtns, minValue, text1, text2, text3, text4, text5) {
    for (curBtn of curBtns) {
        if (curBtn.classList.contains('_active')) {
            if (curBtn.classList.contains(btnsClassList.bitcoin)) {
                minValue.innerHTML = text1;
            }
            if (curBtn.classList.contains(btnsClassList.ethereum)) {
                minValue.innerHTML = text2;
            }
            if (curBtn.classList.contains(btnsClassList.litecoin)) {
                minValue.innerHTML = text3;
            }
            if (curBtn.classList.contains(btnsClassList.dash)) {
                minValue.innerHTML = text4;
            }
            if (curBtn.classList.contains(btnsClassList.usd)) {
                minValue.innerHTML = text5;
            }
        }
    }
}

// Выбор нужного тарифа

function priceFor1(currencyBtns, outputBlock, text1, text2, text3) {
    for (let i = 0; i < currencyBtns.length; i++) {
        
        if ((i == 0 || i == 3) && currencyBtns[i].classList.contains('_active')) {
            outputBlock.textContent = text1;

        } else if (i == 1 && currencyBtns[i].classList.contains('_active')) {
            outputBlock.textContent = text2;

        } else if ((i == 2 || i == 4) && currencyBtns[i].classList.contains('_active')) {
            outputBlock.textContent = text3;
        }
    }
}

// Функции для валидации форм пополнения/вывода

function setErrorFor(input, message) {
    const formControl = input.parentElement;
    const small = formControl.querySelector('small');

    formControl.classList.remove('success');
    formControl.classList.add('error');
    small.innerText = message;
}

function setSuccessFor(input) {
    const formControl = input.parentElement;

    formControl.classList.remove('error');
    formControl.classList.add('success');
}

// Проверка мин. суммы для пополнения/вывода

function checkAmount(curBtns, amount, value1, value2, value3, value4, value5, text1, text2, text3, text4, text5, text6) {
    for (let curBtn of curBtns) {

        if (amount.value == '') {
            setErrorFor(amount, text6);
            break;

        } else if (curBtn.classList.contains(btnsClassList.bitcoin) && curBtn.classList.contains('_active') && +amount.value < value1) {
            setErrorFor(amount, text1);
            break;

        } else if (curBtn.classList.contains(btnsClassList.ethereum) && curBtn.classList.contains('_active') && +amount.value < value2) {
            setErrorFor(amount, text2);
            break;

        } else if (curBtn.classList.contains(btnsClassList.litecoin) && curBtn.classList.contains('_active') && +amount.value < value3) {
            setErrorFor(amount, text3);
            break;

        } else if (curBtn.classList.contains(btnsClassList.dash) && curBtn.classList.contains('_active') && +amount.value < value4) {
            setErrorFor(amount, text4);
            break;

        } else if (curBtn.classList.contains(btnsClassList.usd) && curBtn.classList.contains('_active') && +amount.value < value5) {
            setErrorFor(amount, text5);
            break;

        } else {
            setSuccessFor(amount);
        }
    }
}

// Проверка на правильное заполнение полей. Если все правильно - перенаправляем на страницу

// function setLink(btn, inputs, hrefValue) {
//     btn.addEventListener('click', () => {
//         for (let i = 0; i < inputs.length; i++) {
//             if (inputs[i].classList.contains('success')) {
//                 btn.setAttribute('href', hrefValue);
//             } else {
//                 btn.setAttribute('href', '#');
//             }
//         }
//     });
// }

window.addEventListener('DOMContentLoaded', function () {

    // Валидация форм регистрации и входа

    const signUpform = document.querySelector('#signup__form'),
        fullName = document.querySelector('#fullname'),
        username = document.querySelector('#username'),
        email = document.querySelector('#email'),
        pass = document.querySelector('#password'),
        confirm = document.querySelector('#confirm'),
        checkbox = document.querySelector('#checkbox'),
        receiptForm = document.querySelector('#receipt-form'),
        emailReceipt = document.querySelector('#email-receipt');

    if (signUpform) {
        signUpform.addEventListener('submit', function (e) {
            e.preventDefault();
            checkInputs();
        });
    }

    if (receiptForm) {
        receiptForm.addEventListener('submit', function (e) {
            e.preventDefault();
            checkInputs();
        });
    }

    function checkInputs() {
        const fullNameValue = fullName.value.trim(),
            usernameValue = username.value.trim(),
            emailValue = email.value.trim(),
            emailReceiptValue = emailReceipt.value.trim(),
            passValue = pass.value.trim(),
            confirmValue = confirm.value.trim();

        if (fullNameValue === '') {
            setErrorFor(fullName, "Fullname can't be blank");
        } else {
            setSuccessFor(fullName);
        }
        if (usernameValue === '') {
            setErrorFor(username, "Username can't be blank");
        } else {
            setSuccessFor(username);
        }
        if (emailValue === '') {
            setErrorFor(email, "Email can't be blank");
        } else if (!isEmail(emailValue)) {
            setErrorFor(email, "Please enter email correctly");
        } else {
            setSuccessFor(email);
        }
        if (emailReceiptValue === '') {
            setErrorFor(emailReceipt, "Email can't be blank");
        } else if (!isEmail(emailReceiptValue)) {
            setErrorFor(emailReceipt, "Please enter email correctly");
        } else {
            setSuccessFor(emailReceipt);
        }
        if (passValue === '') {
            setErrorFor(pass, "Password can't be blank");
        } else {
            setSuccessFor(pass);
        }
        if (confirmValue === '') {
            setErrorFor(confirm, "Confirm input can't be blank");
        } else if (passValue !== confirmValue) {
            setErrorFor(confirm, "Password doesn't match");
        } else {
            setSuccessFor(confirm);
        }
        if (checkbox.checked == false) {
            setErrorFor(checkbox, "You need to agree with the rules");
        } else {
            setSuccessFor(checkbox);
        }
    }

    function isEmail(email) {
        return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email);
    }

    // Validation login form

    // const loginForm = document.querySelector('#login__form'),
    // loginUser = document.querySelector('#username2'),
    // loginPass = document.querySelector('#password2');

    // if (loginForm) {
    //     loginForm.addEventListener('submit', function (e) {
    //         e.preventDefault();
    //         checkLogIn();
    //     });
    // }

    // function checkLogIn() {
    //     const loginUserValue = loginUser.value.trim(),
    //         loginPassValue = loginPass.value.trim();

    //     if (loginUserValue === '') {
    //         setErrorFor(loginUser, "Username can't be blank");
    //     } else {
    //         setSuccessFor(loginUser);
    //     }
    //     if (loginPassValue === '') {
    //         setErrorFor(loginPass, "Password can't be blank");
    //     } else {
    //         setSuccessFor(loginPass);
    //     }
    // }
})